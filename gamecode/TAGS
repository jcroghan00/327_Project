
dungeon.c,1455
# define rand_under(8,175
# define rand_range(12,318
# define UNUSED(13,391
#define malloc(15,422
typedef struct file_info 21,561
  char file_type[file_type22,588
  uint32_t version;23,610
  uint32_t file_size;24,630
  int load;25,652
  int save;26,664
  int ren_non_tun_dist_map;27,676
} file_info_t;28,704
typedef struct corridor_path 30,720
  heap_node_t *hn;hn31,751
  uint8_t pos[pos32,770
  uint8_t from[from33,788
  int32_t cost;34,807
} corridor_path_t;35,823
static uint32_t in_room(37,843
static uint32_t adjacent_to_room(53,1234
static uint32_t is_open_space(61,1495
static int32_t corridor_path_cmp(66,1594
static void dijkstra_corridor(70,1744
static void dijkstra_corridor_inv(169,5481
#define hardnesspair_inv(222,6803
static int connect_two_rooms(272,9474
static int create_cycle(291,10126
static int connect_rooms(333,11691
int gaussian[gaussian346,11884
typedef struct queue_node 354,12040
  int x,355,12068
  int x, y;355,12068
  struct queue_node *next;next356,12080
} queue_node_t;357,12107
static int smooth_hardness(359,12124
static int empty_dungeon(513,16298
static int place_rooms(532,16674
static void place_stairs(569,17861
static int make_rooms(611,18931
static void place_pc(635,19479
int gen_dungeon(649,19737
int load_dungeon(664,19967
void render_dungeon(776,22439
void delete_dungeon(820,23393
void init_dungeon(824,23432
int save_dungeon(829,23489
int main(907,25466

dungeon.h,1379
# define DUNGEON_H2,18
 typedef struct pc 14,244
  int8_t x,15,265
  int8_t x, y;15,265
}pc_t;pc_t16,280
typedef enum dim 18,288
  dim_x,19,307
  dim_y,20,316
  num_dims21,325
} dim_t;22,336
typedef int16_t pair_t[pair_t24,346
#define DUNGEON_X 26,381
#define DUNGEON_Y 27,415
#define MIN_ROOMS 28,449
#define MAX_ROOMS 29,482
#define ROOM_MIN_X 30,516
#define ROOM_MIN_Y 31,549
#define ROOM_MAX_X 32,582
#define ROOM_MAX_Y 33,616
#define mappair(35,651
#define mapxy(36,708
#define hardnesspair(37,743
#define hardnessxy(38,810
typedef enum __attribute__ ((__packed__)) terrain_type 40,856
  ter_debug,41,913
  ter_wall,42,926
  ter_wall_immutable,43,938
  ter_pc,44,960
  ter_floor,45,970
  ter_floor_room,46,983
  ter_floor_hall,47,1001
  ter_stairs,48,1019
  ter_stairs_up,49,1033
  ter_stairs_down50,1050
} terrain_type_t;51,1068
typedef struct room 53,1087
  pair_t position;54,1109
  pair_t size;55,1128
} room_t;56,1143
typedef struct stair{stair58,1154
  pair_t position;59,1176
  int up_down;61,1212
}stair_t;stair_t62,1227
typedef struct dungeon 64,1238
  uint32_t num_rooms;65,1263
  room_t rooms[rooms66,1285
  stair_t stairs[stairs67,1312
  terrain_type_t map[map68,1335
  uint8_t hardness[hardness77,1952
  uint16_t stairs_up;78,1994
  uint16_t stairs_down;79,2016
  pc_t pc;80,2040
} dungeon_t;81,2051

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

monster.c,253
typedef struct monster_path 9,121
    heap_node_t *hn;hn10,151
    uint8_t pos[pos11,172
    int32_t cost;12,192
} monster_path_t;13,210
static int32_t monster_path_cmp(15,229
void dijkstra_non_tunneling(20,432
void dijkstra_tunneling(76,1992

monster.h,24
# define MONSTER_H2,18

game.c,0
