
dungeon.c,1459
# define rand_under(18,381
# define rand_range(22,524
# define UNUSED(23,597
#define malloc(25,628
typedef struct file_info 31,767
  char file_type[file_type32,794
  uint32_t version;33,816
  uint32_t file_size;34,836
  int load;35,858
  int save;36,870
  int ren_non_tun_dist_map;37,882
} file_info_t;38,910
typedef struct corridor_path 40,926
  heap_node_t *hn;hn41,957
  uint8_t pos[pos42,976
  uint8_t from[from43,994
  int32_t cost;44,1013
} corridor_path_t;45,1029
static uint32_t in_room(47,1049
static uint32_t adjacent_to_room(63,1440
static uint32_t is_open_space(71,1701
static int32_t corridor_path_cmp(76,1800
static void dijkstra_corridor(80,1950
static void dijkstra_corridor_inv(179,5687
#define hardnesspair_inv(232,7009
static int connect_two_rooms(282,9680
static int create_cycle(301,10332
static int connect_rooms(343,11897
int gaussian[gaussian356,12090
typedef struct queue_node 364,12246
  int x,365,12274
  int x, y;365,12274
  struct queue_node *next;next366,12286
} queue_node_t;367,12313
static int smooth_hardness(369,12330
static int empty_dungeon(523,16504
static int place_rooms(542,16880
static void place_stairs(579,18067
static int make_rooms(619,19116
static void place_pc(643,19664
int gen_dungeon(657,19922
int load_dungeon(671,20099
void render_dungeon(779,22455
void delete_dungeon(823,23407
void init_dungeon(827,23446
int save_dungeon(832,23503
int main(908,25471

dungeon.h,1357
# define DUNGEON_H2,18
 typedef struct pc 4,38
  int8_t x,5,59
  int8_t x, y;5,59
}pc_t;pc_t6,74
typedef enum dim 8,82
  dim_x,9,101
  dim_y,10,110
  num_dims11,119
} dim_t;12,130
typedef int16_t pair_t[pair_t14,140
#define DUNGEON_X 16,175
#define DUNGEON_Y 17,209
#define MIN_ROOMS 18,243
#define MAX_ROOMS 19,276
#define ROOM_MIN_X 20,310
#define ROOM_MIN_Y 21,343
#define ROOM_MAX_X 22,376
#define ROOM_MAX_Y 23,410
#define mappair(25,445
#define mapxy(26,502
#define hardnesspair(27,537
#define hardnessxy(28,604
typedef enum __attribute__ ((__packed__)) terrain_type 30,650
  ter_debug,31,707
  ter_wall,32,720
  ter_wall_immutable,33,732
  ter_pc,34,754
  ter_floor,35,764
  ter_floor_room,36,777
  ter_floor_hall,37,795
  ter_stairs,38,813
  ter_stairs_up,39,827
  ter_stairs_down40,844
} terrain_type_t;41,862
typedef struct room 43,881
  pair_t position;44,903
  pair_t size;45,922
} room_t;46,937
typedef struct stair{stair48,948
  pair_t position;49,970
  int up_down;51,1006
}stair_t;stair_t52,1021
typedef struct dungeon 54,1032
  uint32_t num_rooms;55,1057
  room_t rooms[rooms56,1079
  stair_t stairs[stairs57,1106
  terrain_type_t map[map58,1129
  uint8_t hardness[hardness67,1746
  uint16_t stairs_up;68,1788
  uint16_t stairs_down;69,1810
  pc_t pc;70,1834
} dungeon_t;71,1845

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

monster.c,259
typedef struct monster_path 8,101
    heap_node_t *hn;hn9,131
    uint8_t pos[pos10,152
    int32_t cost;11,172
} monster_path_t;12,190
static int32_t monster_path_cmp(14,209
static void dijkstra_normal(19,412
static void dijkstra_tunneling(75,1991

monster.h,24
# define MONSTER_H2,18

game.c,0
